package main.world;

import arc.struct.Seq;
import main.world.blocks.drawers.UpgradeDrawer;
import main.world.systems.upgrades.Upgrade;
import main.world.systems.upgrades.UpgradeEntry;
import mindustry.world.Block;

public class BaseBlock extends Block implements UpgradesBlock{
    public BaseBlock(String name) {
        super(name);
        this.update = true;
        this.solid = true;
    }

    @Override
    public void init() {
        super.init();
    }

    //Aplicable upgrades, autogenerated
    public final Seq<Upgrade> upgrades = new Seq<>();

    public Seq<UpgradeEntry> entries = new Seq<>();

    @Override
    public Seq<UpgradeEntry> entries() {
        return entries;
    }

    @Override
    public void load() {
        super.load();
        entries.each(entry -> {
            entry.initialiseDeltas();
            upgrades.add(entry.upgrade);
        });
    }

    @Override
    public boolean isVisible() {
        return super.isVisible();
    }

    @Override
    public Seq<Upgrade> upgrades(){
        return upgrades;
    }

    @Override
    public Seq<UpgradeDrawer> drawers() {
        return null;
    }
}
